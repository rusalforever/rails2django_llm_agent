import os
import logging
from pathlib import Path
from dotenv import load_dotenv


def load_env(env_path: str = ".env"):
    """
    –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î .env —Ñ–∞–π–ª —ñ –≤–∏–≤–æ–¥–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —É—Å–ø—ñ—à–Ω–µ –∑—á–∏—Ç—É–≤–∞–Ω–Ω—è.
    –Ø–∫—â–æ —Ñ–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ ‚Äî –ø–æ–ø–µ—Ä–µ–¥–∂–∞—î, –∞–ª–µ –Ω–µ –∑—É–ø–∏–Ω—è—î –≤–∏–∫–æ–Ω–∞–Ω–Ω—è.
    """

    env_file = Path(env_path).resolve()
    if not env_file.exists():
        logging.warning(f"‚ö†Ô∏è  .env —Ñ–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: {env_file}")
        return

    load_dotenv(env_file)
    logging.info(f"‚úÖ .env —Ñ–∞–π–ª –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: {env_file}")

    # –õ–æ–≥—É–≤–∞–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–∏—Ö –∑–º—ñ–Ω–Ω–∏—Ö –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
    for key in ["OPENAI_API_KEY", "MODEL_NAME"]:
        value = os.getenv(key)
        if value:
            masked = value[:5] + "..." + value[-3:] if len(value) > 8 else "***"
            logging.info(f"üîπ {key} = {masked}")
        else:
            logging.warning(f"‚ö†Ô∏è  –ó–º—ñ–Ω–Ω–∞ {key} –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–∞ —É .env")


def require_env(var_name: str) -> str:
    """
    –ü–µ—Ä–µ–≤—ñ—Ä—è—î, —â–æ –∑–º—ñ–Ω–Ω–∞ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —ó—ó –∑–Ω–∞—á–µ–Ω–Ω—è.
    –Ø–∫—â–æ –∑–º—ñ–Ω–Ω–æ—ó –Ω–µ–º–∞—î ‚Äî –≤–∏–∫–ª–∏–∫–∞—î –ø–æ–º–∏–ª–∫—É.
    """
    value = os.getenv(var_name)
    if not value:
        raise EnvironmentError(f"‚ùå –ó–º—ñ–Ω–Ω–∞ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ {var_name} –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
    return value
